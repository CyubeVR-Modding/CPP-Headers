#ifndef UE4SS_SDK_MainMenu_HPP
#define UE4SS_SDK_MainMenu_HPP

class UMainMenu_C : public UUserWidget
{
    FPointerToUberGraphFrame UberGraphFrame;
    class UWidgetAnimation* WidgetSwitcherChange;
    class UWidgetAnimation* FlyInBorder;
    class UWidgetAnimation* FlyIn;
    class UBorder* Border_7;
    class UMainMenuButton_C* Button_Mods;
    class UMainMenuButton_C* ButtonContinue;
    class UMainMenuButton_C* ButtonCredits;
    class UMainMenuButton_C* ButtonDiscord;
    class UMainMenuButton_C* ButtonExit;
    class UMainMenuButton_C* ButtonLoad;
    class UMainMenuButton_C* ButtonMusic;
    class UMainMenuButton_C* ButtonPatreon;
    class UMainMenuButton_C* ButtonRoadmap;
    class UMainMenuButton_C* ButtonsNews;
    class UMainMenuButton_C* ButtonStartNew;
    class UMainMenuButton_C* ButtonTutorial;
    class UTextBlock* CurrentVersionText;
    class UButton* DarkModeButton;
    class UWidgetSwitcher* GreetingsSwitcher;
    class UImage* Image;
    class UImage* Image_0;
    class UImage* Image_1;
    class ULoadWorldWidget_C* LoadWorldWidget;
    class UMainMenuButton_C* MainMenuButton;
    class UMainMenuButton_C* MainMenuButton_C_0;
    class UMainMenuButton_C* MainMenuButton_CustomBlocksNo;
    class UMainMenuButton_C* MainMenuButton_CustomBlocksYes;
    class UManageModsWidget_C* ManageModsWidget;
    class UButton* MusicButton;
    class UImage* NewsImage;
    class UNewWorldWidget_C* NewWorldWidget;
    class UTutorialWIdget_C* TutorialWIdget;
    class UVerticalBox* VerticalBox_0;
    class UWidgetSwitcher* WidgetSwitcher_0;
    bool EnableSplashscreen;
    float SplashscreenOffset;
    FString SaveGameName;
    bool FirstGameRun;
    class UWorldSlotSaveGame_C* SlotSaveGame;
    bool KeyboardEnabled;
    TEnumAsByte<KeyboardTarget> KeyboardInputTarget;
    class UMediaPlayer* MediaPlayer;
    bool NewVar_0;
    TArray<FString> WorldNames;
    TArray<int32> WorldSeeds;
    class UNewsWIdget_C* RealNewsWidget;
    bool MusicEnabled;
    class UTextureRenderTarget2D* NewsWidgetRenderTarget;
    FString requestID;
    class AMainMenuWidgetActorNew_C* ParentActor;
    bool DarkModeEnabled;

    void SetDarkModeEnabled(bool NewEnabled, bool NoSaveUpdate);
    void UpdateSaveGameOnDisk();
    void FindWorldData();
    void ClickStartNewWorld();
    void DeleteWorld(FString World Name);
    void ConvertKeyboardStirngToWorldName(FString KeyboardString, FString& WorldName);
    void BndEvt__ButtonContinue_K2Node_ComponentBoundEvent_63_Pressed__DelegateSignature();
    void SetupGameInstance(FString WorldName, bool LoadExisting);
    void SetupRendering();
    void LoadRealLevel();
    void ShowKeyboard();
    void SwitchActiveWidget(int32 Index);
    void BndEvt__NewWorldWidget_K2Node_ComponentBoundEvent_26_ClickedOnStart__DelegateSignature();
    void BndEvt__NewWorldWidget_K2Node_ComponentBoundEvent_187_ClickedOnSeedTextBox__DelegateSignature();
    void BndEvt__NewWorldWidget_K2Node_ComponentBoundEvent_248_ClickedOnNameTextBox__DelegateSignature();
    void BndEvt__LoadWorldWidget_K2Node_ComponentBoundEvent_100_ClickedOnWorld__DelegateSignature(FString WorldName);
    void SaveGameCheck();
    void BndEvt__ButtonLoad_K2Node_ComponentBoundEvent_141_Pressed__DelegateSignature();
    void BndEvt__ButtonStartNew_K2Node_ComponentBoundEvent_136_Pressed__DelegateSignature();
    void BndEvt__MainMenuButton_C_2_K2Node_ComponentBoundEvent_97_Pressed__DelegateSignature();
    void EnableLoadingVideo();
    void SetButtonEnabledState();
    void EnableLoadingMusic();
    void ContinueTest();
    void FadeMusicOut();
    void BndEvt__MainMenuButton_C_0_K2Node_ComponentBoundEvent_80_Pressed__DelegateSignature();
    void BndEvt__ButtonTutorial_K2Node_ComponentBoundEvent_30_Pressed__DelegateSignature();
    void Tick(FGeometry MyGeometry, float InDeltaTime);
    void BndEvt__TutorialWIdget_K2Node_ComponentBoundEvent_492_TutorialFinished__DelegateSignature();
    void BndEvt__MainMenuButton_K2Node_ComponentBoundEvent_1275_Pressed__DelegateSignature();
    void InitialFadeIn();
    void SetCurrentVersion();
    void BndEvt__ButtonDiscord_K2Node_ComponentBoundEvent_389_Pressed__DelegateSignature();
    void BndEvt__Button_0_K2Node_ComponentBoundEvent_137_OnButtonClickedEvent__DelegateSignature();
    void BndEvt__MainMenuButton_C_0_K2Node_ComponentBoundEvent_154_Pressed__DelegateSignature();
    void AfterGreetings();
    void BndEvt__ButtonMusic_K2Node_ComponentBoundEvent_0_Pressed__DelegateSignature();
    void SetMenuButtonStateAfterLoading();
    void SetMainMenuMusicEnabled(bool NewEnabled, bool NoSaveUpdate);
    void SetNewsImage(class UObject* Image);
    void BndEvt__Button_Mods_K2Node_ComponentBoundEvent_1_Pressed__DelegateSignature();
    void OnMouseEnter(FGeometry MyGeometry, const FPointerEvent& MouseEvent);
    void OnMouseLeave(const FPointerEvent& MouseEvent);
    void Construct();
    void BndEvt__ButtonPatreon_K2Node_ComponentBoundEvent_2_Pressed__DelegateSignature();
    void BndEvt__ButtonRoadmap_K2Node_ComponentBoundEvent_3_Pressed__DelegateSignature();
    void UpdateDiscordNumber();
    void OnRequestComplete(const TArray<FString>& Data, const int32 statusCode, const TArray<uint8>& byteData, const FString requestID);
    void BndEvt__MainMenu_MainMenuButton_CustomBlocksYes_K2Node_ComponentBoundEvent_4_Pressed__DelegateSignature();
    void BndEvt__MainMenu_MainMenuButton_CustomBlocksNo_K2Node_ComponentBoundEvent_5_Pressed__DelegateSignature();
    void LoadWorld1();
    void BndEvt__MainMenu_DarkModeButton_K2Node_ComponentBoundEvent_6_OnButtonClickedEvent__DelegateSignature();
    void OnInitialized();
    void StartNewWorldTesting();
    void ExecuteUbergraph_MainMenu(int32 EntryPoint);
};

#endif
